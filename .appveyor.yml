#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: '{branch}-{build}'

# branches to build
branches:
  only:
    - rpcpp-devops

# Skipping commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
skip_commits:
    files:
        - docs/*


#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image:
- Ubuntu1804
- Visual Studio 2017 Preview


# set clone depth
clone_depth: 1


# scripts that are called at very beginning, before repo cloning
init:
- ps: >-
    if (($isLinux) -and ($env:CONFIGURATION -eq "Debug") -and (Test-Path env:TRIGGER_NAME)) {
        Update-AppveyorBuild -Message "Build by $env:TRIGGER_BUILD_VERSION in $env:TRIGGER_NAME"
    }
- git --version
- cmake --version


# environment variables
#environment:


# this is how to allow failing jobs in the matrix
matrix:
    fast_finish: true   # set this flag to immediately finish build once one of the jobs fails.


# build cache to preserve files/folders between builds
#cache:


# scripts that run after cloning repository
install:
# install packages
- sh: sudo apt-get update
- sh: sudo apt-get install --yes --no-install-recommends g++-8
- sh: sudo update-alternatives --set gcc /usr/bin/gcc-8


#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: x64


# build Configuration, i.e. Debug, Release, etc.
configuration:
- Release


build:
    parallel: true                  # enable MSBuild parallel builds


# to run your custom scripts instead of automatic MSBuild
build_script:
- sh: ./bootstrap-vcpkg.sh
- cmd: .\bootstrap-vcpkg.bat

# render pipeline
- sh: ./vcpkg install boost-dll boost-any boost-multi-index fmt spdlog yaml-cpp imgui
- cmd: vcpkg install boost-dll boost-any boost-multi-index fmt spdlog yaml-cpp assimp imgui

# rpcpp plugins
- cmd: vcpkg install openvr


#---------------------------------#
#       tests configuration       #
#---------------------------------#

test_script:

after_test:
# Linux
- sh: tar cJf "$APPVEYOR_BUILD_FOLDER/vcpkg.tar.xz" "installed"

# Visual Studio
- cmd: 7z a vcpkg.7z "installed"

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
# Visual Studio (default)
- path: vcpkg.7z

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
#on_success:


#---------------------------------#
#       specializing matrix       #
#---------------------------------#

for:
-
    matrix:
        only:
            - image: Ubuntu1804
    environment:
        VCPKG_DEFAULT_TRIPLET: x64-linux
    artifacts:
        - path: vcpkg.tar.xz

-
    matrix:
        only:
            - image: Visual Studio 2017 Preview
    environment:
        BUILD_TOOLSET_VERSION: '141'
        VCPKG_DEFAULT_TRIPLET: x64-windows-vc141
